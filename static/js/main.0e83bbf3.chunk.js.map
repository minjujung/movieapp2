{"version":3,"sources":["Components/Header.js","Components/Loader.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","api.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Loader","role","aria-label","Title","span","Grid","Section","title","children","Text","color","Message","text","Image","bgUrl","Rating","Year","ImageContainer","Poster","id","imageUrl","rating","year","isMovie","length","substring","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","error","loading","updateTerm","Helmet","onSubmit","placeholder","value","onChange","map","movie","original_title","poster_path","vote_average","release_date","show","original_name","first_air_date","SearchContainer","state","event","preventDefault","searchByTerm","target","setState","a","moviesApi","search","data","results","tVApi","this","React","Component","api","axios","create","baseURL","params","api_key","language","topRated","get","airingToday","popular","showDetail","append_to_response","term","query","nowPlaying","upComing","movieDetail","collectionApi","HomePresenter","HomeContainer","TVPresenter","TVContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Button","StarsOuter","StarsInner","width","Divider","Flag","ReactCountryFlag","Overview","p","LongDivider","hr","VideoContainer","Video","Companies","CompaniesInfo","Creators","CreatorsInfo","Seasons","SeasonsInfo","Collection","CollectionInfo","Homepage","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","imdb_id","href","production_countries","country","iso_3166_1","countryCode","svg","style","height","overview","videos","video","site","src","key","frameBorder","allow","allowFullScreen","production_companies","company","logo_path","created_by","people","profile_path","seasons","season","belongs_to_collection","homepage","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","CollectionPresenter","parts","part","CollectionContainer","console","log","goBack","path","exact","component","Home","Search","TV","Detail","from","globalStyles","createGlobalStyle","reset","App","className","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e83bbf3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    color: white;\r\n    position:fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    padding: 0px 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: rgba(20, 20, 20, 0.8);\r\n    z-index: 10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width: 80px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom: 3px solid ${props => props.current ? \"#e74c3c\" : \"transparent\"};\r\n    transition: border-bottom .3s ease-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\n// withRouter로 component를 감싸면 props를 가짐\r\n// 이 props로 다른 component들과 연결 가능!!\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">Tv</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n))","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 40px;\r\n    margin-top: 30px;\r\n`;\r\n\r\nconst Loader = () => \r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            👀\r\n        </span>\r\n    </Container>;\r\n\r\nexport default Loader;","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default Section;","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => ( \r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image: url(${props => props.bgUrl});\r\n    height: 200px;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position: center center;\r\n    transition: opacity 0.1s ease-in-out linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    opacity: 0;\r\n    transition: opacity 0.1s ease-in-out linear;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size: 10px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n`;\r\n    \r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    &:hover {\r\n        ${Image} {\r\n            opacity: 0.3;\r\n        }\r\n        ${Rating} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : \"/noPosterSmall.PNG\"} />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                        ⭐\r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...`: title }</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n \r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\n// 'form' intercept the event of the 'submit'\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 28px;\r\n    width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n    movieResults,\r\n    tvResults,\r\n    searchTerm,\r\n    handleSubmit,\r\n    error,\r\n    loading,\r\n    updateTerm\r\n}) => (\r\n    <Container>\r\n        <Helmet>\r\n            <title>Search | MovieApp2</title>\r\n        </Helmet>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input \r\n                placeholder=\"Search Movies or TV Shows...\" \r\n                value={searchTerm} \r\n                onChange={updateTerm} \r\n            />\r\n        </Form>\r\n        {loading ? ( <Loader /> ) : (\r\n          <>\r\n            {movieResults && movieResults.length > 0 && (\r\n                <Section title=\"Movie Results\">\r\n                    {movieResults.map(movie => (\r\n                        <Poster \r\n                            key={movie.id} \r\n                            id={movie.id} \r\n                            title={movie.original_title} \r\n                            imageUrl={movie.poster_path}\r\n                            rating={movie.vote_average}\r\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                            isMovie={true}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {tvResults && tvResults.length > 0 && (\r\n                <Section title=\"TV Show Results\">\r\n                    {tvResults.map(show => (\r\n                        <Poster \r\n                            key={show.id} \r\n                            id={show.id} \r\n                            title={show.original_name} \r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                        />\r\n                    ))}\r\n                </Section>\r\n            )}\r\n            {error && <Message color=\"#eb4d4b\" text={error}/>}\r\n            {tvResults && \r\n                movieResults && \r\n                tvResults.length === 0 && \r\n                movieResults.length === 0 &&\r\n                  <Message color=\"#95afc0\" text=\"Nothing Found!!\" />}\r\n          </>\r\n        )}\r\n    </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array, \r\n    tvResults: PropTypes.array,\r\n    searchTerm: PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    error: PropTypes.string, \r\n    loading: PropTypes.bool.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\n// to export container, make index.js\r\n\r\nexport default SearchContainer;","import { moviesApi, tVApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component{\r\n    state={\r\n        movieResults: null, \r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = (event) => {\r\n        const { target: { value } } = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n\r\n    }\r\n\r\n    searchByTerm = async() => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({ loading: true });\r\n        try{\r\n            const { data: { results: movieResults } } = await moviesApi.search(searchTerm);\r\n            const { data: { results: tvResults } } = await tVApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            });\r\n            this.setState({ loading: true });\r\n        } catch{\r\n            this.setState({ error: \"Can't find results!\" });\r\n        } finally{\r\n            this.setState({ loading: false });\r\n        }\r\n    };\r\n\r\n    render(){\r\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n        return (\r\n            <SearchPresenter \r\n                movieResults={movieResults}\r\n                tvResults={tvResults}\r\n                searchTerm={searchTerm}\r\n                error={error}\r\n                loading={loading}\r\n                handleSubmit={this.handleSubmit}\r\n                updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}","import axios from \"axios\";\r\nimport Search from \"Routes/Search\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"d65f4a42d4c8bec9b2b4ef11ca5713a5\",\r\n        language: \"en-US\"\r\n    }\r\n})\r\n\r\n// '/tv/popular'은 절대 경로이므로 api에서 우리가 정의해준\r\n// url, params랑 같이 쓸 수 없음!! 'tv/popular' 상대 경로 사용해야함!!\r\n//api.get(\"tv/popular\");\r\n\r\nexport const tVApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"), \r\n    popular: ()=> api.get(\"tv/popular\"),\r\n    showDetail: id => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: term => api.get(\"search/tv\", {\r\n        params: {\r\n            query: term\r\n        }\r\n    })\r\n};\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upComing: () => api.get(\"movie/upcoming\"),  \r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: term => api.get(\"search/movie\", {\r\n        params: {\r\n            query: term\r\n        }\r\n    }),\r\n};\r\n\r\nexport const collectionApi ={\r\n    collection: id => api.get(`collection/${id}`)\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\n//{nowPlaying && nowPlaying.length > 0 && --> nowPlaying 값이 있는지 확인하고\r\n//이게 참이어야 <Section> 파트가 실행이 됨!!\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) => (\r\n    <>\r\n    <Helmet>\r\n        <title>Movies | MovieApp2</title>\r\n    </Helmet>\r\n    {loading ? <Loader /> : (\r\n        <Container>\r\n            {nowPlaying && nowPlaying.length > 0 && (\r\n                <Section title=\"Now Playing\">\r\n                    {nowPlaying.map(movie => (\r\n                        <Poster \r\n                            key={movie.id} \r\n                            id={movie.id} \r\n                            title={movie.original_title} \r\n                            imageUrl={movie.poster_path}\r\n                            rating={movie.vote_average}\r\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                            isMovie={true}\r\n                        />\r\n                        ))}\r\n                </Section>\r\n                )}\r\n            {upComing && upComing.length > 0 && (\r\n                <Section title=\"Upcoming\">\r\n                    {upComing.map(movie => (\r\n                        <Poster \r\n                            key={movie.id} \r\n                            id={movie.id} \r\n                            title={movie.original_title} \r\n                            imageUrl={movie.poster_path}\r\n                            rating={movie.vote_average}\r\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                            isMovie={true}\r\n                        />\r\n                        ))}\r\n                </Section>\r\n                )}\r\n            {popular && popular.length > 0 && (\r\n                <Section title=\"Popular\">\r\n                    {popular.map(movie => (\r\n                        <Poster \r\n                            key={movie.id} \r\n                            id={movie.id} \r\n                            title={movie.original_title} \r\n                            imageUrl={movie.poster_path}\r\n                            rating={movie.vote_average}\r\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                            isMovie={true}\r\n                        />\r\n                        ))}\r\n                </Section>\r\n                )}\r\n                {error && <Message color=\"#eb4d4b\" text={error}/>}\r\n        </Container>\r\n    )};\r\n    </>\r\n)\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array, \r\n    upComing: PropTypes.array,\r\n    popular: PropTypes.array, \r\n    error: PropTypes.string, \r\n    loading: PropTypes.bool.isRequired \r\n};\r\n\r\nexport default HomePresenter;","import HomeContainer from \"./HomeContainer\";\r\n\r\n// to export container, make index.js\r\n\r\nexport default HomeContainer;","import { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\n//container presenter pattern\r\n//container: it has data, state and get api -> it will do all the logic => data\r\n//presenter: it shows the data -> just function of component => styles\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying: null,\r\n        upComing: null, \r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    // 'try' to do something, \r\n    // if it doesnt work 'catch' the error\r\n    // even if succeed or fail, \r\n    // we gonna do something the end('finally')\r\n\r\n    //async : if it uses 'async', it says to javascript\r\n    //\"hey! Wair for me until I finish doing something\"\r\n\r\n    //await : if it uses 'await', it says to javascript\r\n    //\"Don't continue until I'm not finished\"\r\n    \r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const { data:{ results: nowPlaying } } = await moviesApi.nowPlaying();\r\n            const { data:{ results: upComing } } = await moviesApi.upComing();\r\n            const { data:{ results: popular } } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upComing,\r\n                popular\r\n            })\r\n        } catch{\r\n            this.setState({\r\n                error: \"Can't find movies information!\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n        return (\r\n            <HomePresenter  \r\n                nowPlaying={nowPlaying} \r\n                upComing={upComing} \r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, airingToday, popular, error, loading}) => (\r\n    <>\r\n        <Helmet>\r\n            <title>TV Shows | MovieApp2</title>\r\n        </Helmet>\r\n        {loading ? <Loader /> : (\r\n        <Container>\r\n            {topRated && topRated.length > 0 && (\r\n                <Section title=\"Top Rated Shows\">\r\n                    {topRated.map(show => (\r\n                        <Poster \r\n                            key={show.id} \r\n                            id={show.id} \r\n                            title={show.original_name} \r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                        />\r\n                        ))}\r\n                </Section>\r\n            )}\r\n            {airingToday && airingToday.length > 0 && (\r\n                <Section title=\"Today Shows\">\r\n                    {airingToday.map(show => (\r\n                        <Poster \r\n                            key={show.id} \r\n                            id={show.id} \r\n                            title={show.original_name} \r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                        />\r\n                        ))}\r\n                </Section>\r\n            )}\r\n            {popular && popular.length > 0 && (\r\n                <Section title=\"Popular Shows\">\r\n                    {popular.map(show => (\r\n                        <Poster \r\n                            key={show.id} \r\n                            id={show.id} \r\n                            title={show.original_name} \r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                        />\r\n                        ))}\r\n                </Section>\r\n            )}\r\n            {error && <Message color=\"#eb4d4b\" text={error}/>}\r\n        </Container>\r\n    )};\r\n    </>\r\n)\r\n\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array, \r\n    airingToday: PropTypes.array,\r\n    popular: PropTypes.array, \r\n    error: PropTypes.string, \r\n    loading: PropTypes.bool.isRequired \r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\n// to export container, make index.js\r\n\r\nexport default TVContainer;","import { tVApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class extends React.Component{\r\n    state={\r\n        topRated: null,\r\n        airingToday: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const { data: { results: topRated }} = await tVApi.topRated();\r\n            const { data: { results: airingToday }} = await tVApi.airingToday();\r\n            const { data: { results: popular }} = await tVApi.popular();\r\n            this.setState({\r\n                topRated,\r\n                airingToday,\r\n                popular\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV shows information!\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { topRated, airingToday, popular, error, loading } = this.state;\r\n        return (\r\n            <TVPresenter \r\n                topRated={topRated}\r\n                airingToday={airingToday}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport ReactCountryFlag from \"react-country-flag\";\r\n\r\n\r\n//span은 margin을 안가져서 margin 값을 줘도 작동 X\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n    position: relative;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    height: 100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    z-index: 1;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 30px;\r\n    overflow-y: scroll;\r\n    ::-webkit-scrollbar {\r\n        margin-left: 30px;\r\n        width: 5px;  \r\n        height: 8px;\r\n        background-color: transparent;         \r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background-color: transparent;       \r\n    }   \r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: transparent;    \r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: rgba(255, 255, 255, 0.3);\r\n        }     \r\n    }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n    &:last-child {\r\n        display: inline-block;\r\n        img {\r\n            margin-right: 10px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Button = styled.span`    \r\n    background-color: #E2B616;\r\n    color: black;\r\n    padding: 3px 5px;\r\n    border-radius: 5px; \r\n    font-weight: 800;\r\n`;\r\n\r\nconst StarsOuter = styled.div`\r\n    position: relative;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n    ::before {\r\n        content: \"\\f005 \\f005 \\f005 \\f005 \\f005\";\r\n        font-family: \"Font Awesome 5 Free\";\r\n        font-weight: 900;\r\n        color: white;\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n\r\nconst StarsInner = styled.span`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    width: ${props => props.width}%;\r\n    ::before {\r\n        content: \"\\f005 \\f005 \\f005 \\f005 \\f005\";\r\n        font-family: \"Font Awesome 5 Free\";\r\n        font-weight: 900;\r\n        color: #E2B616;\r\n    }\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Flag = styled(ReactCountryFlag)`\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size: 12px;\r\n    line-height: 1.5; \r\n    opacity: 0.7;\r\n    width: 70%;\r\n`;\r\n\r\nconst LongDivider = styled.hr`\r\n    border-top: 3px solid white;\r\n    opacity: 0.3;\r\n    border-radius: 3px;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst Video = styled.div`\r\n    display: flex;\r\n    height: 50%;\r\n    overflow-x: scroll;\r\n    iframe {\r\n        margin: 20px 0;\r\n        margin-right: 20px;\r\n        height: 200px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 5px;  \r\n        height: 8px;        \r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background: transparent;       \r\n    }   \r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: rgba(255, 255, 255, 0.3);    \r\n        border-radius: 5px;     \r\n    }\r\n`;\r\n\r\nconst Companies = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 20px;\r\n    img {\r\n        width: 110px;\r\n        height: 80px;\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nconst CompaniesInfo = styled.div`\r\n    display: flex;\r\n    font-size: 15px;\r\n    margin-top: 20px;\r\n    overflow-y: hidden;\r\n    overflow-x: scroll;\r\n    div {\r\n        margin-right: 30px;\r\n    }\r\n    h4 {\r\n        margin-top: 5px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 5px;  \r\n        height: 8px;        \r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background: transparent;       \r\n    }   \r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: transparent;    \r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: rgba(255, 255, 255, 0.3);\r\n        }         \r\n    }\r\n`;\r\n\r\nconst Creators = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 20px;\r\n    img {\r\n        width: 150px;\r\n        height: 200px;\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nconst CreatorsInfo = styled.div`\r\n    display: flex;\r\n    font-size: 15px;\r\n    margin-top: 20px;\r\n    div {\r\n        margin-right: 20px;\r\n    }\r\n    h4 {\r\n        margin-top: 5px;\r\n    }\r\n`;\r\n\r\nconst Seasons = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 20px;\r\n    img {\r\n        width: 150px;\r\n        height: 200px;\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nconst SeasonsInfo = styled.div`\r\n    display: flex;   \r\n    font-size: 15px;\r\n    margin-top: 20px;\r\n    overflow-y: hidden;\r\n    overflow-x: scroll;\r\n    div {\r\n        margin-right: 20px;\r\n    }\r\n    h4 {\r\n        margin-top: 5px;\r\n        margin-bottom: 20px;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 5px;  \r\n        height: 8px;        \r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background: transparent;       \r\n    }   \r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: transparent;    \r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: rgba(255, 255, 255, 0.3);\r\n        }         \r\n    }\r\n`;\r\n\r\nconst Collection = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 20px;\r\n    img {\r\n        width: 250px;\r\n        height: 300px;\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nconst CollectionInfo = styled.div`\r\n    display: flex;\r\n    font-size: 15px;\r\n    margin-top: 20px;\r\n    div {\r\n        margin-right: 20px;\r\n    }\r\n    h4 {\r\n        margin-top: 5px;\r\n    }\r\n`;\r\n\r\nconst Homepage = styled.div`\r\n    font-size: 25px;\r\n    color: white;\r\n    span {\r\n        &:hover {\r\n            color: rgba(225, 225, 225, 0.7);\r\n            text-decoration: underline solid white;\r\n        }\r\n    }\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) => (\r\n    loading ? ( \r\n        <>\r\n            <Helmet>\r\n                <title>Loading | MovieApp2</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n    ) : (\r\n      <Container>\r\n          <Helmet>\r\n              <title>{result.original_title \r\n                    ? result.original_title \r\n                    : result.original_name} | MovieApp2</title>\r\n          </Helmet>\r\n        <Backdrop \r\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}>\r\n        </Backdrop>\r\n        <Content>\r\n            <Cover\r\n                bgImage={\r\n                    result.poster_path\r\n                        ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                        : (\"/noPosterSmall.PNG\")\r\n                } \r\n                />\r\n        <Data>\r\n            <Title>\r\n                {result.original_title \r\n                    ? result.original_title \r\n                    : result.original_name} \r\n            </Title>\r\n            <ItemContainer>\r\n                <Item>\r\n                    {result.release_date && result.release_date !== null\r\n                        ? result.release_date.substring(0, 4) \r\n                        : \"\"}\r\n                    {result.first_air_date && result.first_air_date !== null\r\n                        ? result.first_air_date.substring(0, 4)\r\n                        : \"\"}\r\n                </Item>\r\n                <Divider>•</Divider>\r\n                <Item>\r\n                    {result.runtime \r\n                        ? result.runtime\r\n                        : result.episode_run_time} min\r\n                </Item>\r\n                <Divider>•</Divider>\r\n                <Item>\r\n                    {result.genres && \r\n                        result.genres.map((genre, index) => \r\n                            index === result.genres.length - 1 ? genre.name : `${genre.name} / `\r\n                        )}\r\n                </Item>\r\n                <Divider>•</Divider>\r\n                <Item>\r\n                    {result.imdb_id \r\n                    ? (<Button><a href={`https://www.imdb.com/title/${result.imdb_id}`} target=\"_blank\">IMDb</a></Button>)\r\n                    : \"\"\r\n                    }\r\n                </Item>\r\n                <Item>\r\n                    {result.imdb_id ? <Divider>•</Divider> : \"\"}\r\n                    <StarsOuter>\r\n                        <StarsInner width={result.vote_average && `${result.vote_average}`*10} />\r\n                    </StarsOuter>\r\n                    {result.vote_average && `${result.vote_average}`}\r\n                </Item>\r\n                <Divider>•</Divider>\r\n                <Item>\r\n                    {result.production_countries && \r\n                        result.production_countries.map(country => country.iso_3166_1 \r\n                            ? <Flag countryCode={`${country.iso_3166_1}`} svg style={{ width: \"2em\", height: \"2em\"}} />\r\n                            : \"\"\r\n                        )}\r\n                </Item>\r\n            </ItemContainer>\r\n            <Overview>\r\n                {result.overview}\r\n            </Overview>\r\n            <LongDivider></LongDivider>\r\n            <VideoContainer>\r\n                Videos\r\n                <Video>\r\n                    {result.videos.results &&\r\n                        result.videos.results.map(video => video.site === \"YouTube\" \r\n                            ? <iframe src={`https://www.youtube.com/embed/${video.key}`}\r\n                                frameBorder='0'\r\n                                allow='autoplay; encrypted-media'\r\n                                allowFullScreen\r\n                                title='video'\r\n                            />\r\n                            : \"Can't find videos in YouTube😥\")}\r\n                </Video>\r\n            </VideoContainer>\r\n            <LongDivider></LongDivider>\r\n            <Companies>\r\n                {result.production_companies && <span>Companies</span>}\r\n                <CompaniesInfo>\r\n                    {result.production_companies &&\r\n                        result.production_companies.map(company => company.logo_path \r\n                            ? <div>\r\n                                <img src={`https://image.tmdb.org/t/p/original${company.logo_path}`}/> \r\n                                <h4>{`${company.name}`}</h4>\r\n                            </div> \r\n                            : <div>\r\n                                <img src=\"/noPosterSmall.PNG\"/> \r\n                                <h4>{`${company.name}`}</h4>\r\n                            </div> \r\n                        )}\r\n                </CompaniesInfo>\r\n            </Companies>\r\n            {result.created_by && <LongDivider></LongDivider>}\r\n            <Creators>\r\n                {result.created_by && <span>Creators</span>}\r\n                <CreatorsInfo>\r\n                    {result.created_by &&\r\n                        result.created_by.map(people => people.profile_path \r\n                            ? <div>\r\n                                <img src={`https://image.tmdb.org/t/p/original${people.profile_path}`}/> \r\n                                <h4>{`${people.name}`}</h4>\r\n                            </div>\r\n                            : <div>\r\n                                <img src=\"/noPosterSmall.PNG\"/> \r\n                                <h4>{`${people.name}`}</h4>\r\n                            </div>\r\n                        )}\r\n                </CreatorsInfo>\r\n            </Creators>\r\n            {result.seasons && <LongDivider></LongDivider>}\r\n            <Seasons>\r\n                {result.seasons && <span>Seasons</span>}\r\n                <SeasonsInfo>\r\n                    {result.seasons &&\r\n                            result.seasons.map(season => season.poster_path \r\n                                ? <div>\r\n                                    <img src={`https://image.tmdb.org/t/p/original${season.poster_path}`}/> \r\n                                    <h4>{`${season.name}`}</h4>\r\n                                </div>\r\n                                : <div>\r\n                                    <img src=\"/noPosterSmall.PNG\"/> \r\n                                    <h4>{`${season.name}`}</h4>\r\n                                </div>\r\n                            )}\r\n                </SeasonsInfo>\r\n            </Seasons>\r\n            {result.belongs_to_collection && <LongDivider></LongDivider>}\r\n            <Collection>\r\n                {result.belongs_to_collection && <span>Collection</span>}\r\n                <CollectionInfo>\r\n                    {result.belongs_to_collection\r\n                                ? <Link to={`/collection/${result.belongs_to_collection.id}`}>\r\n                                    <img src={`https://image.tmdb.org/t/p/original${result.belongs_to_collection.poster_path}`}/> \r\n                                    <h4>{`${result.belongs_to_collection.name}`}</h4>\r\n                                </Link>\r\n                                : \"\"\r\n                            }\r\n                </CollectionInfo>\r\n            </Collection>\r\n            {result.homepage && <LongDivider></LongDivider>}\r\n            <Homepage>\r\n                {result.homepage \r\n                        ? <span><a href={`${result.homepage}`} target=\"_blank\">More Infromation</a></span>\r\n                        : \"\"\r\n                        }\r\n            </Homepage>\r\n        </Data>\r\n        </Content>\r\n      </Container>\r\n    )\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.array,\r\n    error: PropTypes.string, \r\n    loading: PropTypes.bool.isRequired \r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import { moviesApi, tVApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        const { location: { pathname } } = props;\r\n        this.state={\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n    \r\n    \r\n    async componentDidMount(){\r\n        const {\r\n            match: {\r\n                params: { id }\r\n            }, \r\n            history: { push }\r\n        } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parseId = parseInt(id);\r\n        if(isNaN(parseId)){\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if(isMovie){\r\n                ({ data: result } = await moviesApi.movieDetail(parseId));\r\n            } else {\r\n                ({ data: result } = await tVApi.showDetail(parseId));\r\n            }\r\n        } catch {\r\n            this.setState({ error: \"Can't find anything!\"});\r\n        } finally {\r\n            this.setState({ loading: false, result });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { result, error, loading } = this.state;\r\n        return(\r\n            <DetailPresenter\r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n \r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n    position: relative;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    position: fixed;\r\n    top: 50px;\r\n    transition: top 0.3s;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 10%;\r\n    font-size: 40px;\r\n    font-weight: 400;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    background-color: rgba(215, 212, 212, 0.3);\r\n    z-index: 2;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n   width: 100%;\r\n   height: 100%;\r\n   display: grid;\r\n   grid-template-columns: repeat(3, 1fr);\r\n   grid-auto-rows: 1fr;\r\n   row-gap: 40px;\r\n   padding-top: 100px;\r\n   justify-items: center;\r\n   align-items: center;\r\n   z-index: 1;\r\n   overflow-y: scroll;\r\n   ::-webkit-scrollbar {\r\n        width: 5px;  \r\n        height: 8px;        \r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background: transparent;       \r\n    }   \r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: transparent;    \r\n        border-radius: 5px;\r\n        &:hover {\r\n            background-color: rgba(255, 255, 255, 0.3); \r\n        }     \r\n    }\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n    h4 {\r\n        align-self: center;\r\n        margin: 20px 0;\r\n        font-size: 20px;\r\n    }\r\n    img{\r\n        width: 250px;\r\n        height: 320px;\r\n        border-radius: 5px;\r\n    }\r\n    \r\n`;\r\n\r\n\r\nconst CollectionPresenter= ({ result, error, loading }) => (\r\n    loading ? (\r\n        <>\r\n            <Helmet>\r\n                <title>Loading | MovieApp2</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n    ) : (\r\n        <Container>\r\n            <Helmet>\r\n                <title>\r\n                    {result.name ? result.name + \" |\" : \"\"} MovieApp2\r\n                </title>\r\n            </Helmet>\r\n            <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n            />\r\n            <Content>\r\n                <Title>\r\n                    {result.name && `${result.name}`}\r\n                </Title>\r\n                <Cover>\r\n                {result.parts && \r\n                    result.parts.map(part => part.poster_path \r\n                        ? <SLink to={`/movie/${part.id}`}>\r\n                            <img src={`https://image.tmdb.org/t/p/original${part.poster_path}`} />\r\n                            <h4>{part.original_title.length > 20 ? `${part.original_title.substring(0, 20)}...`: `${part.original_title}` }</h4>\r\n                        </SLink>  \r\n                        : \"\")}\r\n            </Cover>\r\n            </Content>           \r\n        </Container>\r\n\r\n    )\r\n);\r\n\r\nCollectionPresenter.propTypes = {\r\n    result: PropTypes.array,\r\n    error: PropTypes.string, \r\n    loading: PropTypes.bool.isRequired \r\n};\r\n\r\nexport default CollectionPresenter;","import CollectionContainer from \"./CollectionContainer\";\r\n\r\nexport default CollectionContainer;","import { collectionApi } from \"api\";\r\nimport React from \"react\";\r\nimport CollectionPresenter from \"./CollectionPresenter\";\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        console.log(props);\r\n        this.state={\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const{\r\n            match: {\r\n                params: { id }\r\n            },\r\n            history: { goBack },\r\n        } = this.props;\r\n        const parseId = parseInt(id);\r\n        if(isNaN(parseId)){\r\n            return goBack();\r\n        }\r\n        let result = null;\r\n        try {\r\n                ({ data: result } = await collectionApi.collection(parseId));\r\n            console.log(result);\r\n        } catch {\r\n            this.setState({ error: \"Can't find any collection of this movie😥\"})\r\n        } finally {\r\n            this.setState({ loading: false, result })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { result, error, loading } = this.state;\r\n        return(\r\n            <CollectionPresenter\r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n//to remove '#' in url, use 'BrowserRouter' same with 'HashRouter'\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Header from \"Components/Header\"\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Collection from \"Routes/Collection\";\r\n\r\n// <Redirect from=\"*\" to=\"/\" />: if none of them match, then redirect to home(\"/\")\r\n// <Switch>: render only one route at a time,if dont add this always redirect to home(\"/\")\r\n\r\nexport default () => (\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n        <Route path=\"/\" exact component={ Home } />\r\n        <Route path=\"/search\" component={ Search } />\r\n        <Route path=\"/tv\" component={ TV } />\r\n        <Route path=\"/movie/:id\" exact component={ Detail } />\r\n        <Route path=\"/show/:id\" component={ Detail } />\r\n        <Route path=\"/collection/:id\" component={ Collection } />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n    </Router>\r\n);\r\n\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-size: 14px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n\r\n    .country {\r\n      \r\n            width:\"2em\";\r\n            height: \"2em\";\r\n        \r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\n//'Header'가 'Router'바깥쪽에 있어서 모든 페이지에서 \n//'Header' 공통적으로 있음!\n\nfunction App() {\n  return (   \n    <div className=\"App\">\n      <Router />\n      <GlobalStyles />\n    </div>    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}